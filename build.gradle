import org.springframework.boot.gradle.plugin.SpringBootPlugin

buildscript {
    ext {
        spring = '2.7.0'
        openapi = '1.6.9'
        hiberDataType = '2.13.3'
        queryDslVersion = '5.0.0'
        h2 = '2.1.212'
        testing = '7.6.0'
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version "${spring}"
    //  id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'ru.sitronics.tn'
sourceCompatibility = '17'

bootRun {
    jvmArgs = ["-agentlib:jdwp=transport=dt_socket,server=y,address=8000,suspend=n"]
}

configurations {
    all {
        exclude module: 'spring-boot-starter-tomcat'
    }
    springBom
    annotationProcessor.extendsFrom springBom
    implementation.extendsFrom springBom
    compileOnly {
        extendsFrom annotationProcessor
    }
    developmentOnly.extendsFrom springBom
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

repositories {
    mavenCentral()
}

jar {
    enabled = false
}

dependencies {
    springBom platform(SpringBootPlugin.BOM_COORDINATES)
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-undertow' exclude module: 'undertow-websockets-jsr'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.monitorjbl:json-view:1.1.0'
    // https://mvnrepository.com/artifact/commons-beanutils/commons-beanutils
    implementation 'commons-beanutils:commons-beanutils:1.9.4'
    // https://mvnrepository.com/artifact/com.github.java-json-tools/json-patch
    implementation 'com.github.java-json-tools:json-patch:1.13'
    //    compile group: 'org.hibernate', name: 'hibernate-validator', version: '7.0.4.Final'
    // QueryDSL
/*    implementation("com.querydsl:querydsl-jpa:${queryDslVersion}",
            "com.querydsl:querydsl-apt:${queryDslVersion}:jpa",
            "com.querydsl:querydsl-core:${queryDslVersion}")*/
    //implementation 'cz.jirutka.rsql:rsql-parser:2.1.0'
    //  implementation 'io.github.perplexhub:rsql-querydsl-spring-boot-starter:5.0.19'
    implementation 'io.github.perplexhub:rsql-jpa-spring-boot-starter:5.0.19'
    //  implementation 'com.github.tennaito:rsql-jpa:2.0.2'

    // https://mvnrepository.com/artifact/org.jsoup/jsoup
    implementation 'org.jsoup:jsoup:1.14.3'
    // https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-ui
    implementation "org.springdoc:springdoc-openapi-ui:$openapi"
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-hibernate5
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-hibernate5:$hiberDataType"
    implementation "org.testng:testng:$testing"
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly "com.h2database:h2:$h2"
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok' //для dsl поискать
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation "org.mockito:mockito-core"
}

tasks.named('test') {
    useJUnitPlatform()
}

/*

querydsl {
    jpa = true
    querydslSourcesDir = "build/generated/sources/annotationProcessor/java/main" //queryDslSourceDirectory
}

sourceSets {
    main {
        java {
            srcDir "build/generated/sources/annotationProcessor/java/main"  //queryDslSourceDirectory
        }
    }
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
configurations {
    querydsl.extendsFrom compileClasspath
}
*/
